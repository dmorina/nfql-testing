
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = b'\xe2S\xd2n\xdf\xf84\x88\x86\xc7\xb2Z~\xc3\x16\x94'
    
_lr_action_items = {'GT':([9,12,14,55,56,58,],[22,-37,-36,-28,-26,-27,]),'EQ':([9,12,14,53,55,56,58,],[23,-37,-36,61,-28,-26,-27,]),'int':([21,22,23,24,25,26,27,28,29,30,33,34,37,51,52,54,61,],[-22,-19,-17,-23,-21,-18,-24,-25,-20,43,43,43,43,59,60,43,63,]),'newline':([3,4,10,12,15,16,17,20,32,36,38,39,40,41,42,43,44,49,55,56,57,58,59,60,63,],[6,-3,31,-14,-9,-7,-11,-13,-4,-8,-12,-33,-32,-31,-16,-35,-34,-9,-28,-26,-10,-27,-38,-39,-15,]),'MAC':([21,22,23,24,25,26,27,28,29,30,33,34,37,54,],[-22,-19,-17,-23,-21,-18,-24,-25,-20,44,44,44,44,44,]),'deltaKeyword':([39,40,41,42,43,44,59,60,],[-33,-32,-31,53,-35,-34,-38,-39,]),'inKeyword':([9,12,14,55,56,58,],[27,-37,-36,-28,-26,-27,]),'notinKeyword':([9,12,14,55,56,58,],[28,-37,-36,-28,-26,-27,]),'LTEQ':([9,12,14,55,56,58,],[29,-37,-36,-28,-26,-27,]),')':([33,34,37,47,48,50,54,62,],[-30,-30,-30,55,56,58,-30,-29,]),'ML':([9,12,14,55,56,58,],[21,-37,-36,-28,-26,-27,]),'ORKeyword':([12,15,17,20,38,39,40,41,42,43,44,49,55,56,58,59,60,63,],[-14,35,-11,-13,-12,-33,-32,-31,-16,-35,-34,35,-28,-26,-27,-38,-39,-15,]),'id':([1,7,19,31,35,],[5,14,14,14,14,]),'MG':([9,12,14,55,56,58,],[24,-37,-36,-28,-26,-27,]),'GTEQ':([9,12,14,55,56,58,],[25,-37,-36,-28,-26,-27,]),',':([39,40,41,43,44,46,59,60,],[-33,-32,-31,-35,-34,54,-38,-39,]),'/':([40,41,],[51,52,]),'bitANDKeyword':([7,19,31,35,],[18,18,18,18,]),'NOTKeyword':([7,31,35,],[19,19,19,]),'filterKeyword':([0,6,],[1,1,]),'(':([13,14,18,],[33,34,37,]),'LT':([9,12,14,55,56,58,],[26,-37,-36,-28,-26,-27,]),'IPv6':([21,22,23,24,25,26,27,28,29,30,33,34,37,54,],[-22,-19,-17,-23,-21,-18,-24,-25,-20,41,41,41,41,41,]),'{':([5,],[7,]),'IPv4':([21,22,23,24,25,26,27,28,29,30,33,34,37,54,],[-22,-19,-17,-23,-21,-18,-24,-25,-20,40,40,40,40,40,]),'}':([7,11,31,45,],[-6,32,-6,-5,]),'bitORKeyword':([7,19,31,35,],[13,13,13,13,]),'$end':([0,2,6,8,],[-2,0,-2,-1,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'filter_rule_1n':([7,31,],[11,45,]),'arg_names':([7,19,31,35,],[9,9,9,9,]),'opt_rule':([15,49,],[36,57,]),'CIDR':([30,33,34,37,54,],[39,39,39,39,39,]),'infix_rule':([7,19,31,35,],[20,20,20,20,]),'rule_or_not':([7,31,35,],[15,15,49,]),'filter':([0,6,],[4,4,]),'pipeline_stage':([0,6,],[3,3,]),'rule':([7,19,31,35,],[17,38,17,17,]),'prefix_rule':([7,19,31,35,],[12,12,12,12,]),'args':([33,34,37,54,],[47,48,50,62,]),'pipeline_stage_1n':([0,6,],[2,8,]),'op':([9,],[30,]),'or_rule':([7,31,],[16,16,]),'filter_rule':([7,31,],[10,10,]),'arg':([30,33,34,37,54,],[42,46,46,46,46,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pipeline_stage_1n","S'",1,None,None,None),
  ('pipeline_stage_1n -> pipeline_stage newline pipeline_stage_1n','pipeline_stage_1n',3,'p_pipeline_stage_1n','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',70),
  ('pipeline_stage_1n -> <empty>','pipeline_stage_1n',0,'p_pipeline_stage_end','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',75),
  ('pipeline_stage -> filter','pipeline_stage',1,'p_pipeline_stage','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',79),
  ('filter -> filterKeyword id { filter_rule_1n }','filter',5,'p_filter','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',85),
  ('filter_rule_1n -> filter_rule newline filter_rule_1n','filter_rule_1n',3,'p_filter_rule_1n','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',93),
  ('filter_rule_1n -> <empty>','filter_rule_1n',0,'p_filter_rule_0','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',98),
  ('filter_rule -> or_rule','filter_rule',1,'p_filter_rule','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',103),
  ('or_rule -> rule_or_not opt_rule','or_rule',2,'p_or_rule','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',109),
  ('opt_rule -> <empty>','opt_rule',0,'p_term_opt_rule','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',120),
  ('opt_rule -> ORKeyword rule_or_not opt_rule','opt_rule',3,'p_opt_rule','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',124),
  ('rule_or_not -> rule','rule_or_not',1,'p_rule_or_not','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',132),
  ('rule_or_not -> NOTKeyword rule','rule_or_not',2,'p_rule_or_not','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',133),
  ('rule -> infix_rule','rule',1,'p_rule','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',143),
  ('rule -> prefix_rule','rule',1,'p_rule','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',144),
  ('infix_rule -> arg_names op arg deltaKeyword EQ int','infix_rule',6,'p_delta_rule','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',148),
  ('infix_rule -> arg_names op arg','infix_rule',3,'p_infix_rule','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',185),
  ('op -> EQ','op',1,'p_op','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',224),
  ('op -> LT','op',1,'p_op','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',225),
  ('op -> GT','op',1,'p_op','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',226),
  ('op -> LTEQ','op',1,'p_op','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',227),
  ('op -> GTEQ','op',1,'p_op','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',228),
  ('op -> ML','op',1,'p_op','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',229),
  ('op -> MG','op',1,'p_op','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',230),
  ('op -> inKeyword','op',1,'p_op','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',231),
  ('op -> notinKeyword','op',1,'p_op','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',232),
  ('prefix_rule -> id ( args )','prefix_rule',4,'p_rule_prefix','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',238),
  ('prefix_rule -> bitANDKeyword ( args )','prefix_rule',4,'p_rule_prefix','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',239),
  ('prefix_rule -> bitORKeyword ( args )','prefix_rule',4,'p_rule_prefix','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',240),
  ('args -> arg , args','args',3,'p_args','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',246),
  ('args -> <empty>','args',0,'p_no_args','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',253),
  ('arg -> IPv6','arg',1,'p_arg','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',258),
  ('arg -> IPv4','arg',1,'p_arg','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',259),
  ('arg -> CIDR','arg',1,'p_arg','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',260),
  ('arg -> MAC','arg',1,'p_arg','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',261),
  ('arg -> int','arg',1,'p_arg','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',262),
  ('arg_names -> id','arg_names',1,'p_arg_names','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',269),
  ('arg_names -> prefix_rule','arg_names',1,'p_arg_names','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',270),
  ('CIDR -> IPv4 / int','CIDR',3,'p_cidr','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',275),
  ('CIDR -> IPv6 / int','CIDR',3,'p_cidr','C:\\Users\\d\\PycharmProjects\\nfql-parser\\src\\nfql_parser.py',276),
]
